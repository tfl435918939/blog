---
layout:     post
title:      "解读阿里一面面经-牛客网"
subtitle:   " \"人生就像一场马拉松，跑到最后才是赢家。\""
date:       2018-04-05 17:38:00
author:     "Leon"
header-img: "img/2018-04-03-posts-bg.jpg"
catalog: true
tags:
    - 面经
---

> “Anyway, anyhow. ”


## 来源

[阿里一面面经 牛客网](https://www.nowcoder.com/discuss/68447)

## 解答

Maven中两个冲突包依赖其他包，如何处理？

依赖冲突的产生：
因为依赖的传递性。A->B->C(V1.1); A->D->C(V1.2)。如果依赖C有多个版本，就会产生冲突。

Maven依赖选取原则：
**最短路径**：A->B->C(V1.1)；A->B->E->C(V1.2)。依赖C的版本为V1.1。
**最先声明**：A->B->C(V1.1); A->D->C(V1.2)。如果在A中先声明对B的依赖，则A对C的依赖为V1.1。

**分析方法**：
使用``dependency:tree``分析依赖。
使用``mvn dependency:tree -Dverbose``查看更多信息，尤其是conflict信息。

**解决方法**：
缩短指定版本的路径/ exclude掉不想要的版本/ 将依赖声明为optional

---

- [pom.xml中有哪些配置？](https://tfl435918939.github.io/blog/2018/04/07/Maven%E5%92%8CPom%E6%96%87%E4%BB%B6/)

- [谈谈String,StringBuilder,StringBuffer](https://tfl435918939.github.io/blog/2018/04/07/String-StringBuffer-StringBuilder/)

- [JVM内存模型](https://tfl435918939.github.io/blog/2018/04/07/JVM%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B/)

- [程序中为什么要使用多线程？](https://blog.csdn.net/zdwzzu2006/article/details/2252516)
1.线程和进程相比，线程的花销小，切换快。启动一个新的进程必须分配给它独立的地址空间，建立众多的数据表来维护它的代码段，数据段和堆栈段。这样的工作方式花销非常大。而多线程共用相同的地址空间，共享大部门的数据，启动一个线程所花费的空间远远小于启动一个进程。而且线程间的切换所需时间远小于进程间的切换。
2.使用多线程的另外一个原因：拥有比进程间通信更方便快捷的通信机制。因为进程具有独立的数据空间，要进行数据的传递只能通过通信的方式进行，这种方式费时而且不方便。而处于同一进程下的线程之间共享数据空间。
3.(1)提高应用程序的响应。将耗时长的操作置于一个新的线程。就不会导致等待程序响应，而使键盘、鼠标、菜单的操作失去响应；(2)使多CPU系统更加有效。操作系统会保证当线程数不大于CPU数目时，不同的线程运行于不同的CPU；(3)改善程序结构。

- [线程是不是越多越好？一般设置几个？](https://blog.csdn.net/zhangweikai966/article/details/52397397)
大部门情况下要答出：M个N核服务器，通过执行业务的单线程分析出本地计算时间为x，等待时间为y，则工作线程数（线程池线程数）设置为``M*N*(x+y)/x``，能让CPU的利用率最大化。
但是有个问题：本地计算时间和等待时间是很难精准计算的，只能具体问题具体分析，上面的公式是理论值求解。感兴趣的点击题目链接。

- 用过哪些创建线程方法？
